version: '3'

silent: true

tasks:
  install:
    cmds:
      - task: install-tools
      - task: install-service-dependencies
      - task: install-e2e-dependencies

  install-tools:
    cmds:
      - '$(cd $HOME && go get -u github.com/onsi/ginkgo/ginkgo)'
      - curl -fsSL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b "$PWD/tools" v1.27.0

  install-e2e-dependencies:
    dir: e2e/
    cmds: [npm ci --no-progress]

  install-service-dependencies:
    dir: service/
    cmds: [go mod download]

  world:
    cmds:
      - task: check-preconditions
      - task: format-service
      - task: lint-service
      - task: test-service
      - task: integration-test-service
      - task: e2e
      - task: cleanup-dependencies-service

  check-preconditions:
    cmds:
      - which go &> /dev/null
      - which node &> /dev/null
      - which ginkgo &> /dev/null
      - which screen &> /dev/null
      - which curl &> /dev/null
      - '[[ -x tools/golangci-lint ]]'
      - go version | grep 'go1.15' &> /dev/null
      - node --version | grep 'v14.' &> /dev/null
      - tools/golangci-lint --version | grep 'has version 1.27' &> /dev/null

  format-service:
    dir: service/
    cmds: [go fmt ./...]

  lint-service:
    dir: service/
    cmds: [../tools/golangci-lint run --fix]


  test-service:
    dir: service/
    cmds: [ginkgo -r --skipPackage=integration]

  integration-test-service:
    dir: service/
    cmds: [ginkgo test/integration]

  cleanup-dependencies-service:
    dir: service/
    cmds: [go mod verify, go mod tidy]

  e2e:
    desc: run e2e test
    deps: [start-service]
    dir: e2e
    cmds: [npm run test]

  start-service:
    desc: locally start service
    deps: [stop-service]
    dir: service/
    env:
      PORT: 8080
    cmds:
      - screen -dmS service go run main.go
      - ./wait-healthy.sh

  stop-service:
    desc: locally stop service
    cmds: ['(! lsof -ti tcp:8080 &> /dev/null) || kill -9 $(lsof -ti tcp:8080) &> /dev/null']

  default:
    cmds: [task: world]
